package br.furb.compilador;

public interface ParserConstants {

    int START_SYMBOL = 47;

    int FIRST_NON_TERMINAL = 47;
    int FIRST_SEMANTIC_ACTION = 95;

    int[][] PARSER_TABLE
            = {
                {-1, -1, -1, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
                {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 2, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
                {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
                {-1, 5, -1, -1, -1, -1, 6, -1, -1, -1, 5, -1, 6, -1, -1, -1, 5, 5, -1, -1, -1, -1, -1, -1, 5, 5, 5, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
                {-1, 7, -1, -1, -1, -1, -1, -1, -1, -1, 9, -1, -1, -1, -1, -1, 12, 8, -1, -1, -1, -1, -1, -1, 11, 13, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
                {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 14, -1, -1, -1, -1, -1, -1, 15, -1},
                {17, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 16, -1, -1, -1, -1, -1, -1, -1, 16, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
                {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 18, -1, -1, -1, -1, -1, -1, -1, 19, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
                {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 20, -1, -1, -1, -1, -1, -1, -1, 21, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
                {-1, 23, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 22},
                {-1, 24, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
                {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 26, -1, -1, -1, -1, -1, -1, -1, -1, -1, 25},
                {-1, 27, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
                {-1, 28, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
                {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 30, -1, 29, -1, -1, -1, -1, -1, -1, -1, -1, 29},
                {-1, -1, -1, -1, -1, -1, -1, 31, -1, -1, -1, -1, -1, -1, -1, 33, -1, -1, 32, -1, -1, -1, -1, 34, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
                {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 35, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
                {-1, 36, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
                {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 37, -1, -1, -1, -1, -1, -1, -1, -1, -1},
                {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 39, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 38, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
                {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 40, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
                {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 41, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
                {-1, 42, 42, 42, 42, -1, -1, -1, -1, -1, -1, 42, -1, -1, -1, -1, -1, -1, -1, 42, -1, -1, 42, -1, -1, -1, -1, -1, -1, 42, 42, 42, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 42, -1},
                {-1, 43, 43, 43, 43, -1, -1, -1, -1, -1, -1, 43, -1, -1, -1, -1, -1, -1, -1, 43, -1, -1, 43, -1, -1, -1, -1, -1, -1, 43, 43, 43, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 43, -1},
                {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 44, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 45},
                {-1, 46, 46, 46, 46, -1, -1, -1, -1, -1, -1, 46, -1, -1, -1, -1, -1, -1, -1, 46, -1, -1, 47, -1, -1, -1, -1, -1, -1, 46, 46, 46, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 46, -1},
                {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 48, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
                {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 50, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 49, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
                {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 51, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
                {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 52, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
                {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 53, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
                {-1, 54, 54, 54, 54, -1, -1, -1, -1, -1, -1, 54, -1, -1, -1, -1, -1, -1, -1, 54, -1, -1, -1, -1, -1, -1, -1, -1, -1, 54, 54, 54, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 54, 55},
                {-1, 56, 56, 56, 56, -1, -1, -1, -1, -1, -1, 56, -1, -1, -1, -1, -1, -1, -1, 56, -1, -1, -1, -1, -1, -1, -1, -1, -1, 56, 56, 56, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 56, -1},
                {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 58, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 57},
                {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 59, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
                {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 60, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
                {-1, 61, 61, 61, 61, -1, -1, -1, -1, -1, -1, 61, -1, -1, -1, -1, -1, -1, -1, 61, -1, -1, -1, -1, -1, -1, -1, -1, -1, 61, 61, 61, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 61, -1},
                {-1, -1, -1, -1, -1, -1, -1, -1, 63, 62, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 62, 62, -1, -1, -1, -1, -1, -1, -1, -1, -1, 62},
                {-1, 65, 65, 65, 65, -1, -1, -1, -1, -1, -1, 67, -1, -1, -1, -1, -1, -1, -1, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, 66, 65, 65, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 65, -1},
                {-1, 69, 69, 69, 69, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 69, 69, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 69, -1},
                {-1, -1, -1, -1, -1, -1, -1, -1, 71, 71, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 71, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 71, 71, -1, -1, 70, 70, 70, 70, 70, 70, -1, 71},
                {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 72, 73, 74, 75, 76, 77, -1, -1},
                {-1, 78, 78, 78, 78, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 78, 78, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 78, -1},
                {-1, -1, -1, -1, -1, -1, -1, -1, 79, 79, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 79, -1, -1, -1, -1, -1, -1, -1, -1, -1, 80, 81, -1, -1, 79, 79, -1, -1, 79, 79, 79, 79, 79, 79, -1, 79},
                {-1, 82, 82, 82, 82, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 82, 82, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 82, -1},
                {-1, -1, -1, -1, -1, -1, -1, -1, 83, 83, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, 83, 84, 85, 83, 83, -1, -1, 83, 83, 83, 83, 83, 83, -1, 83},
                {-1, 86, 92, 87, 88, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 90, 91, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 89, -1},
                {-1, -1, -1, -1, -1, -1, -1, -1, 93, 93, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 93, -1, -1, -1, -1, -1, -1, -1, -1, -1, 93, 93, 93, 93, 93, 93, -1, -1, 93, 93, 93, 93, 93, 93, 94, 93}
            };

    int[][] PRODUCTIONS
            = {
                {6, 5, 48, 49, 15, 50, 13, 53},
                {55, 48},
                {0},
                {63},
                {0},
                {51, 36, 50},
                {0},
                {2, 52},
                {67},
                {68},
                {73},
                {75},
                {76},
                {77},
                {38, 83},
                {45, 78, 46},
                {54, 53},
                {0},
                {81},
                {82},
                {14, 2, 45, 56, 46, 37, 62, 36},
                {22, 2, 45, 56, 46, 36},
                {0},
                {57},
                {59, 58},
                {0},
                {36, 57},
                {60, 37, 62},
                {2, 61},
                {0},
                {35, 60},
                {8},
                {19},
                {16},
                {24},
                {29, 64},
                {60, 65},
                {37, 62, 66},
                {36, 64},
                {0},
                {18, 45, 60, 46},
                {11, 45, 69, 46},
                {72, 71},
                {72, 71},
                {35, 70},
                {0},
                {83},
                {23},
                {27, 83, 10, 50, 74, 13},
                {28, 50},
                {0},
                {25, 50, 7, 83},
                {17},
                {26, 83},
                {79},
                {0},
                {83, 80},
                {0},
                {35, 79},
                {14, 2, 45, 56, 46, 37, 62, 36, 49, 15, 50, 13},
                {22, 2, 45, 56, 46, 36, 49, 15, 50, 13},
                {85, 84},
                {0},
                {9, 85, 84},
                {21, 85, 84},
                {86},
                {30},
                {12},
                {20, 85},
                {89, 87},
                {88, 89},
                {0},
                {39},
                {40},
                {41},
                {42},
                {43},
                {44},
                {91, 90},
                {0},
                {31, 91, 90},
                {32, 91, 90},
                {93, 92},
                {0},
                {33, 93, 92},
                {34, 93, 92},
                {2, 94},
                {4},
                {5},
                {45, 83, 46},
                {31, 93},
                {32, 93},
                {3},
                {0},
                {45, 78, 46}
            };

    String[] PARSER_ERROR
            = {
                "",
                "esperado fim de programa",
                "Esperado identificador",
                "Esperado constante inteira",
                "Esperado constante real",
                "Esperado constante caracter",
                "Esperado algoritmo",
                "Esperado até",
                "Esperado caracter",
                "Esperado e",
                "Esperado então",
                "Esperado escreva",
                "Esperado falso",
                "Esperado fim",
                "Esperado função",
                "Esperado início",
                "Esperado inteiro",
                "Esperado interrompa",
                "Esperado leia",
                "Esperado lógico",
                "Esperado não",
                "Esperado ou",
                "Esperado procedimento",
                "Esperado quebra",
                "Esperado real",
                "Esperado repita",
                "Esperado retorne",
                "Esperado se",
                "Esperado senão",
                "Esperado variáveis",
                "Esperado verdadeiro",
                "Esperado \"+\"",
                "Esperado \"-\"",
                "Esperado \"*\"",
                "Esperado \"/\"",
                "Esperado \",\"",
                "Esperado \";\"",
                "Esperado \":\"",
                "Esperado \"<-\"",
                "Esperado \"=\"",
                "Esperado \"<>\"",
                "Esperado \"<\"",
                "Esperado \"<=\"",
                "Esperado \">\"",
                "Esperado \">=\"",
                "Esperado \"(\"",
                "Esperado \")\"",
                "Esperado algoritmo",//"<programa> inv�lido",
                "Esperado função  início  procedimento  variáveis",//"<cabecalho_modulos> inv�lido",
                "Esperado início  variáveis",//"<lista_variaveis> inv�lido",
                "Esperado identificador  até  escreva  fim  interrompa  leia  repita  retorne  se  senão  variáveis",//"<lista_comandos> inv�lido",
                "Esperado identificador  escreva  interrompa  leia  repita  retorne  se",//"<comando> inv�lido",
                "Esperado \"<-\"  \"(\"",//"<comando1> inv�lido",
                "Esperado fim do arquivo  função  procedimento",//"<lista_modulos> inv�lido",
                "Esperado função  procedimento",//"<modulo> inv�lido",
                "Esperado função  procedimento",//"<cabecalho> inv�lido",
                "Esperado identificador  \")\"",//"<lista_parametros> inv�lido",
                "Esperado identificador",//"<lista_parametros_aux> inv�lido",
                "Esperado \";\"  \")\"",//"<lista_parametros_aux1> inv�lido",
                "Esperado identificador",//"<parametro> inv�lido",
                "Esperado identificador",//"<lista_identificadores> inv�lido",
                "Esperado \",\"  \":\"  \")\"",//"<lista_identificadores1> inv�lido",
                "Esperado caracter  inteiro  lógico  real",//"<tipo> inv�lido",
                "Esperado variáveis",//"<variaveis> inv�lido",
                "Esperado identificador",//"<listaidenti> inv�lido",
                "Esperado \":\"",//"<listaidenti1> inv�lido",
                "Esperado início  \";\"",//"<listaidenti2> inv�lido",
                "Esperado leia",//"<entrada_dados> inv�lido",
                "Esperado escreva",//"<saida_dados> inv�lido",
                "Esperada expressão",//"<lista_valores> inv�lido",
                "Esperada expressão",//"<valores> inv�lido",
                "Esperado \",\"  \")\"",//"<valores1> inv�lido",
                "Esparada expressão  quebra",//"<valor> inv�lido",
                "Esperado se",//"<selecao> inv�lido",
                "Esperado fim  senão",//"<senao> inv�lido",
                "Esperado repita",//"<repeticao> inv�lido",
                "Esperado interrompa", //"<interrompa> inv�lido",
                "Esperado retorne",//"<retorne> inv�lido",
                "Esperada expressão  \")\"",//"<parametros_reais> inv�lido",
                "Esperada expressão",//"<lista_expressoes> inv�lido",
                "Esperada \",\" ou \")\"",//"<lista_expressoes1> inv�lido",
                "Esperada função",//"<funcao> inv�lido",
                "Esperado procedimento",//"<procedimento> inv�lido",
                "Esperada expressão",//<expressao> inv�lido",
                "Esperada expressão",//"<expressao1> inv�lido",
                "Esperada expressão",//"<elemento> inv�lido",
                "Esperada expressão",//"<relacional> inv�lido",
                "Esperada expressão",//"<relacional1> inv�lido",
                "Esperada expressão",//"<operador_relacional> inv�lido",
                "Esperada expressão",//"<aritmetica> inv�lido",
                "Esperada expressão",//"<aritmetica1> inv�lido",
                "Esperada expressão",//"<termo> inv�lido",
                "Esperada expressão",//"<termo1> inv�lido",
                "Esperada expressão",//"<fator> inv�lido",
                "Esperada expressão",//"<fator1> inv�lido"
            };
}
